{"version":3,"sources":["../src/index.tsx","../src/config.ts","../src/modules/colors.ts","../src/modules/helpers.ts","../src/components/Clear.tsx","../src/icons/Times.tsx","../src/components/Content.tsx","../src/components/Input.tsx","../src/modules/hooks.ts","../src/components/Option.tsx","../src/components/Handle.tsx","../src/icons/Arrow.tsx","../src/components/Loading.tsx","../src/icons/Spinner.tsx","../src/components/Menu.tsx","../src/components/Create.tsx","../src/components/MenuItem.tsx","../src/components/NoData.tsx","../src/components/Separator.tsx"],"sourcesContent":["import { ChangeEvent, Component, createRef, KeyboardEvent, MouseEvent, RefObject } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport isEqual from '@gilbarbara/deep-equal';\n\nimport { defaultProps, SLUG, styledOptions } from '~/config';\n\nimport { hexToRGBA } from '~/modules/colors';\nimport {\n  canUseDOM,\n  debounce,\n  getAllOptions,\n  getCursor,\n  getLabels,\n  getOptionData,\n  getStyles,\n  isNumber,\n  matchOptions,\n  px,\n} from '~/modules/helpers';\n\nimport Clear from '~/components/Clear';\nimport Content from '~/components/Content';\nimport Handle from '~/components/Handle';\nimport Loading from '~/components/Loading';\nimport Menu from '~/components/Menu';\nimport Separator from '~/components/Separator';\n\nimport { Actions, Methods, Option, OptionKeys, Props, State, Styles } from '~/types';\n\nconst ReactDropdown = styled(\n  'div',\n  styledOptions,\n)<Styles & Required<Pick<Props, 'direction' | 'disabled'>>>(props => {\n  const { bgColor, borderColor, borderRadius, color, direction, disabled, minHeight, width } =\n    props;\n\n  return css`\n    align-items: start;\n    background-color: ${bgColor};\n    border-radius: ${borderRadius};\n    border: 1px solid ${borderColor};\n    box-sizing: border-box;\n    cursor: pointer;\n    direction: ${direction};\n    display: flex;\n    flex-direction: row;\n    min-height: ${px(minHeight)};\n    position: relative;\n    width: ${width};\n    ${disabled\n      ? `\n      cursor: not-allowed;\n      opacity: 0.6;\n      pointer-events: none;\n      `\n      : `\n      pointer-events: all;\n      `};\n\n    :hover,\n    :focus-within {\n      border-color: ${color};\n    }\n\n    :focus,\n    :focus-within {\n      outline: 0;\n      box-shadow: 0 0 0 3px ${hexToRGBA(color, 0.2)};\n    }\n\n    * {\n      box-sizing: border-box;\n    }\n  `;\n});\n\nexport class Dropdown extends Component<Props, State> {\n  private readonly dropdownRef: RefObject<HTMLDivElement>;\n  private readonly methods: Methods;\n\n  static defaultProps = defaultProps;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      cursor: null,\n      dropdownBounds: {},\n      search: '',\n      searchResults: props.options,\n      status: props.open || false,\n      values: props.values || [],\n    };\n\n    this.methods = {\n      addItem: this.addItem,\n      areAllSelected: this.areAllSelected,\n      clearAll: this.clearAll,\n      createItem: this.createItem,\n      // eslint-disable-next-line react/destructuring-assignment\n      getDropdownBounds: () => this.state.dropdownBounds,\n      getDropdownRef: () => this.dropdownRef.current,\n      getInputSize: this.getInputSize,\n      getLabels: this.getLabels,\n      getOptionData: this.getOptionData,\n      getStyles: this.getStyles,\n      handleKeyDown: this.handleKeyDown,\n      isSelected: this.isSelected,\n      removeItem: this.removeItem,\n      safeString: this.safeString,\n      searchResults: this.searchResults,\n      selectAll: this.selectAll,\n      setSearch: this.setSearch,\n      setStatus: this.setStatus,\n      toggleAll: this.toggleAll,\n    };\n\n    this.dropdownRef = createRef();\n  }\n\n  componentDidMount() {\n    if (!canUseDOM()) {\n      return;\n    }\n\n    window.addEventListener('resize', this.handleResize, true);\n    window.addEventListener('scroll', this.handleScroll, true);\n\n    if (this.dropdownRef) {\n      this.updateDropdownBounds();\n    }\n  }\n\n  componentDidUpdate(previousProps: Props, previousState: State) {\n    const { search, status, values: stateValues } = this.state;\n    const {\n      closeOnSelect,\n      comparatorFn = defaultProps.comparatorFn,\n      multi,\n      onChange,\n      onClose,\n      onOpen,\n      open,\n      options,\n      values = [],\n    } = this.props;\n\n    if (\n      !comparatorFn(previousProps.values || [], values) &&\n      comparatorFn(previousProps.values || [], previousState.values)\n    ) {\n      this.setState({ values });\n      this.updateDropdownBounds();\n    }\n\n    if (!comparatorFn(previousProps.options, options)) {\n      this.setState({ searchResults: this.searchResults() });\n    }\n\n    if (!comparatorFn(previousState.values, stateValues)) {\n      this.updateDropdownBounds();\n\n      if (onChange) {\n        onChange(stateValues);\n      }\n    }\n\n    if (previousState.search !== search) {\n      this.updateDropdownBounds();\n    }\n\n    if (!isEqual(previousState.values, stateValues) && closeOnSelect) {\n      this.setStatus('close');\n    }\n\n    if (previousProps.open !== open && typeof open === 'boolean') {\n      this.setStatus(open ? 'open' : 'close');\n    }\n\n    if (previousProps.multi !== multi) {\n      this.updateDropdownBounds();\n    }\n\n    if (previousState.status && !status) {\n      document.removeEventListener('click', this.handleClickOutside);\n\n      this.setState({ cursor: null });\n\n      if (onClose) {\n        onClose();\n      }\n    }\n\n    if (!previousState.status && status) {\n      document.addEventListener('click', this.handleClickOutside);\n\n      if (onOpen) {\n        onOpen();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (!canUseDOM()) {\n      return;\n    }\n\n    window.removeEventListener('resize', this.handleResize, true);\n    window.removeEventListener('scroll', this.handleScroll, true);\n    document.removeEventListener('click', this.handleClickOutside);\n  }\n\n  handleClickOutside = (event: Event) => {\n    const { current } = this.dropdownRef;\n    const { target } = event;\n\n    if (!current || !target) {\n      return;\n    }\n\n    if (current === target || !current.contains(target as Node)) {\n      this.setStatus('close');\n    }\n  };\n\n  handleKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n    const { cursor, search, searchResults, status, values } = this.state;\n    const { create } = this.props;\n\n    if (['ArrowDown', 'ArrowUp'].includes(event.key)) {\n      event.stopPropagation();\n    }\n\n    switch (event.key) {\n      case 'ArrowDown': {\n        if (!status) {\n          this.setStatus('open');\n          this.setState({\n            cursor: 0,\n          });\n\n          return;\n        }\n\n        this.setState({\n          cursor: getCursor(cursor, 'down', searchResults),\n        });\n\n        break;\n      }\n      case 'ArrowUp': {\n        this.setState({\n          cursor: getCursor(cursor, 'up', searchResults),\n        });\n\n        break;\n      }\n      case 'Backspace': {\n        if (isNumber(cursor) && !search.length) {\n          const nextValues = values.filter(value => !isEqual(value, searchResults[cursor]));\n\n          if (nextValues.length !== values.length) {\n            this.setState({\n              values: nextValues,\n            });\n          }\n        }\n\n        break;\n      }\n      case 'Enter': {\n        if (isNumber(cursor)) {\n          const currentItem = searchResults[cursor];\n\n          if (currentItem && !currentItem.disabled) {\n            if (create && matchOptions(values, search, false)) {\n              return;\n            }\n\n            this.addItem(currentItem);\n          } else if (search) {\n            this.createItem(search);\n          }\n        } else if (!search) {\n          this.setStatus('toggle', event);\n        }\n\n        break;\n      }\n      case 'Escape': {\n        this.setStatus('close');\n        break;\n      }\n    }\n  };\n\n  // eslint-disable-next-line react/sort-comp\n  handleResize = debounce(() => {\n    this.updateDropdownBounds();\n  }, 150);\n\n  handleScroll = debounce(() => {\n    const { status } = this.state;\n    const { closeOnScroll } = this.props;\n\n    this.updateDropdownBounds();\n\n    if (closeOnScroll && status) {\n      this.setStatus('close');\n    }\n  }, 150);\n\n  setStatus = (\n    action: Actions,\n    event?: Event | MouseEvent<HTMLElement> | KeyboardEvent<HTMLDivElement>,\n  ) => {\n    const { search, status } = this.state;\n    const { clearOnClose, closeOnScroll, closeOnSelect, open, options } = this.props;\n    const target = event && ((event.target || event.currentTarget) as HTMLElement);\n    const isMenuTarget =\n      target &&\n      target.offsetParent &&\n      target.offsetParent.classList.contains('react-dropdown-menu');\n\n    if (!closeOnScroll && !closeOnSelect && event && isMenuTarget) {\n      return;\n    }\n\n    if (typeof open === 'boolean') {\n      this.setState({ status: open });\n\n      return;\n    }\n\n    if (action === 'close' && status) {\n      this.dropdownRef.current?.blur();\n\n      this.setState({\n        status: false,\n        search: clearOnClose ? '' : search,\n        searchResults: options,\n      });\n\n      return;\n    }\n\n    if (action === 'open' && !status) {\n      this.setState({ status: true });\n\n      return;\n    }\n\n    if (action === 'toggle') {\n      this.dropdownRef.current?.focus();\n\n      this.setState({ status: !status });\n    }\n  };\n\n  updateDropdownBounds = () => {\n    if (this.dropdownRef.current) {\n      this.setState({\n        dropdownBounds: this.dropdownRef.current.getBoundingClientRect(),\n      });\n    }\n  };\n\n  getInputSize = () => {\n    const { placeholder, secondaryPlaceholder } = this.props;\n    const { search, values } = this.state;\n\n    if (search) {\n      return search.length;\n    }\n\n    if (secondaryPlaceholder && values.length) {\n      return secondaryPlaceholder.length;\n    }\n\n    return values.length ? 3 : placeholder?.length || 0;\n  };\n\n  getLabels = () => {\n    const { labels } = this.props;\n\n    return getLabels(labels);\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  getOptionData = (input: Option, key: OptionKeys) =>\n    key === 'label' ? getOptionData(input, 'label') : getOptionData(input, 'value');\n\n  getStyles = () => {\n    const { styles } = this.props;\n\n    return getStyles(styles);\n  };\n\n  addItem = (item: Option) => {\n    const { values } = this.state;\n    const { clearOnSelect, multi } = this.props;\n\n    if (multi) {\n      if (matchOptions(values, getOptionData(item, 'value'))) {\n        this.removeItem(null, item, false);\n\n        return;\n      }\n\n      this.setState({\n        values: [...values, item],\n      });\n    } else {\n      this.setState({\n        values: [item],\n      });\n\n      this.setStatus('close');\n    }\n\n    if (clearOnSelect) {\n      this.setState({ search: '' });\n    }\n  };\n\n  removeItem = (event: MouseEvent<HTMLElement> | null, item: Option, close = false) => {\n    const { values } = this.state;\n\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (close) {\n      this.setStatus('close');\n    }\n\n    this.setState({\n      values: values.filter(data => getOptionData(data, 'value') !== getOptionData(item, 'value')),\n    });\n  };\n\n  setSearch = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState(\n      {\n        cursor: null,\n        search: (event.target as HTMLInputElement).value,\n      },\n      () => {\n        this.setState({ searchResults: this.searchResults() });\n      },\n    );\n  };\n\n  areAllSelected = () => {\n    const { options } = this.props;\n    const { values } = this.state;\n\n    return values.length === getAllOptions(options, values).length;\n  };\n\n  clearAll = () => {\n    const { onClearAll } = this.props;\n\n    if (onClearAll) {\n      onClearAll();\n    }\n\n    this.setState({\n      values: [],\n    });\n  };\n\n  createItem = (search: string) => {\n    const { onCreate, options } = this.props;\n    const newValue = {\n      label: search,\n      value: search,\n    };\n\n    this.addItem(newValue);\n\n    if (onCreate) {\n      onCreate(search, () => this.setStatus('close'));\n    }\n\n    this.setState({ search: '', searchResults: [...options, newValue] });\n  };\n\n  isSelected = (option: Option) => {\n    const { values } = this.state;\n\n    return values.some(value => getOptionData(value, 'value') === getOptionData(option, 'value'));\n  };\n\n  selectAll = (valuesList: Option[] = []) => {\n    const { values } = this.state;\n    const { onSelectAll, options } = this.props;\n\n    if (onSelectAll) {\n      onSelectAll();\n    }\n\n    const nextValues = valuesList.length ? valuesList : getAllOptions(options, values);\n\n    this.setState({ values: nextValues });\n  };\n\n  toggleAll = () => {\n    const { values } = this.state;\n\n    if (values.length) {\n      this.clearAll();\n    } else {\n      this.selectAll();\n    }\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  safeString = (input: string) => input.replace(/[$()*+.?[\\\\\\]^{|}]/g, '\\\\$&');\n\n  searchFn = () => {\n    const { search } = this.state;\n    const { options, searchBy = 'label' } = this.props;\n    const regexp = new RegExp(this.safeString(search), 'i');\n\n    return options.filter(item => regexp.test(`${this.getOptionData(item, searchBy)}`));\n  };\n\n  searchResults = () => {\n    const { searchFn } = this.props;\n\n    if (searchFn) {\n      return searchFn({ methods: this.methods, props: this.props, state: this.state });\n    }\n\n    return this.searchFn();\n  };\n\n  render() {\n    const { status, values } = this.state;\n    const {\n      className,\n      direction = 'ltr',\n      disabled = false,\n      hiddenInput,\n      hideHandle,\n      loading,\n      showClearButton,\n      showSeparator,\n      style,\n    } = this.props;\n\n    const classes = [SLUG, className].filter(Boolean).join(' ');\n\n    return (\n      <ReactDropdown\n        ref={this.dropdownRef}\n        aria-expanded={status}\n        aria-label=\"Dropdown\"\n        className={classes}\n        data-component-name=\"Dropdown\"\n        direction={direction}\n        disabled={disabled}\n        onKeyDown={this.handleKeyDown}\n        style={style}\n        tabIndex={disabled ? -1 : 0}\n        {...this.getStyles()}\n      >\n        <Content methods={this.methods} props={this.props} state={this.state} />\n\n        {hiddenInput && (\n          <input\n            defaultValue={\n              values\n                .map(value => {\n                  const { key = 'value' } = hiddenInput;\n\n                  if (key === 'value') {\n                    return getOptionData(value, 'value');\n                  }\n\n                  return getOptionData(value, 'label');\n                })\n                .join(hiddenInput.separator) || ''\n            }\n            disabled={disabled}\n            name={hiddenInput.name}\n            pattern={hiddenInput.pattern}\n            required={!!hiddenInput.required}\n            style={{ opacity: 0, width: 0, position: 'absolute' }}\n            tabIndex={-1}\n          />\n        )}\n\n        {showClearButton && !!values.length && (\n          <Clear methods={this.methods} props={this.props} state={this.state} />\n        )}\n\n        {loading && <Loading methods={this.methods} props={this.props} state={this.state} />}\n\n        {showSeparator && (\n          <Separator methods={this.methods} props={this.props} state={this.state} />\n        )}\n\n        {!hideHandle && <Handle methods={this.methods} props={this.props} state={this.state} />}\n\n        {status && !disabled && (\n          <Menu methods={this.methods} props={this.props} state={this.state} />\n        )}\n      </ReactDropdown>\n    );\n  }\n}\n\nexport default Dropdown;\n\nexport * from '~/types';\n","import isPropValid from '@emotion/is-prop-valid';\nimport isEqual from '@gilbarbara/deep-equal';\nimport { SetRequired } from 'type-fest';\n\nimport { Props } from '~/types';\n\nexport const SLUG = 'react-dropdown';\n\nexport const defaultProps: SetRequired<\n  Omit<Props, 'options'>,\n  'closeOnSelect' | 'comparatorFn' | 'direction' | 'menuPosition' | 'values'\n> = {\n  autoFocus: true,\n  clearOnClose: true,\n  clearOnSelect: true,\n  closeOnScroll: false,\n  closeOnSelect: false,\n  comparatorFn: isEqual,\n  create: false,\n  direction: 'ltr' as const,\n  disabled: false,\n  hideHandle: false,\n  keepSelectedInList: true,\n  loading: false,\n  menuPosition: 'bottom' as const,\n  multi: false,\n  placeholder: 'Select...',\n  searchable: true,\n  searchBy: 'label',\n  secondaryPlaceholder: '',\n  showClearButton: false,\n  showSeparator: false,\n  values: [],\n};\n\nexport const styledOptions = {\n  shouldForwardProp: (prop: string) =>\n    isPropValid(prop) &&\n    ![\n      'color',\n      'direction',\n      'onClearAll',\n      'onCreate',\n      'onClose',\n      'onOpen',\n      'onSelectAll',\n      'spacing',\n      'width',\n    ].includes(prop),\n};\n","export function formatHex(input: string) {\n  const color = input.replace('#', '');\n  let hex = color;\n\n  if (color.length === 3 || color.length === 4) {\n    hex = '';\n\n    [...color].forEach(d => {\n      hex += `${d}${d}`;\n    });\n  }\n\n  hex = `#${hex}`;\n\n  return hex;\n}\n\nexport function getTextColor(input: string) {\n  return getYiq(input) > 135 ? '#000' : '#fff';\n}\n\nexport function getYiq(color: string) {\n  if (!isValidHex(color)) {\n    return 0;\n  }\n\n  const { blue, green, red } = hexToRGB(color);\n\n  return (red * 299 + green * 587 + blue * 114) / 1000;\n}\n\nexport function hexToRGB(input: string) {\n  if (!isValidHex(input)) {\n    return {\n      red: 0,\n      green: 0,\n      blue: 0,\n    };\n  }\n\n  const hex = formatHex(input).replace('#', '');\n\n  return {\n    red: parseInt(String(hex.charAt(0)) + hex.charAt(1), 16),\n    green: parseInt(String(hex.charAt(2)) + hex.charAt(3), 16),\n    blue: parseInt(String(hex.charAt(4)) + hex.charAt(5), 16),\n  };\n}\n\nexport function hexToRGBA(input: string, alpha?: number) {\n  const { blue, green, red } = hexToRGB(input);\n\n  return `rgba(${red}, ${green}, ${blue}${alpha ? `, ${alpha}` : ''})`;\n}\n\nexport function isValidHex(input: string) {\n  return /^#([\\dA-Fa-f]{6}|[\\dA-Fa-f]{3})$/.test(input);\n}\n","import innerText from 'react-innertext';\n\nimport { defaultProps } from '~/config';\n\nimport { ComponentProps, Labels, Option, OptionKeys, Position, Styles } from '~/types';\n\nexport function canUseDOM(): boolean {\n  return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n}\n\nexport function debounce(fn: (...input: any[]) => void, delay = 0) {\n  let timerId: number;\n\n  return (...arguments_: any[]) => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n\n    timerId = window.setTimeout(() => {\n      fn(...arguments_);\n      timerId = 0;\n    }, delay);\n  };\n}\n\nexport function getAllOptions(options: Option[], values: Option[]) {\n  const nextValues = options.filter(option => !option.disabled);\n\n  if (values.length) {\n    values.forEach(value => {\n      if (!nextValues.some(option => option.value === value.value)) {\n        nextValues.push(value);\n      }\n    });\n  }\n\n  return nextValues;\n}\n\nexport function getComponentMinHeight(minHeight: number, amount = 2): string {\n  return px(minHeight - amount);\n}\n\nexport function getCursor(cursor: number | null, type: 'down' | 'up', values: Option[] = []) {\n  const total = values.length;\n  const lastValidIndex = values.map(item => !!item.disabled).lastIndexOf(false);\n  const disabled = values.reduce<number[]>((acc, value, index) => {\n    if (value.disabled) {\n      acc.push(index);\n    }\n\n    return acc;\n  }, []);\n\n  const getNextCursor = (nextCursor: number): number => {\n    if (type === 'down') {\n      if (nextCursor === total) {\n        return 0;\n      }\n\n      if (disabled.includes(nextCursor)) {\n        return getNextCursor(nextCursor + 1);\n      }\n    } else if (type === 'up') {\n      if (nextCursor < 0) {\n        return lastValidIndex;\n      }\n\n      if (disabled.includes(nextCursor)) {\n        return getNextCursor(nextCursor - 1);\n      }\n    }\n\n    return nextCursor;\n  };\n\n  if (cursor === null) {\n    return type === 'down' ? 0 : lastValidIndex;\n  } else if (type === 'down') {\n    return getNextCursor(cursor + 1);\n  } else if (type === 'up') {\n    return getNextCursor(cursor - 1);\n  }\n\n  return cursor;\n}\n\nexport function getLabels(labels?: Partial<Labels>): Labels {\n  const {\n    clear = 'Clear',\n    create = 'Add {search}',\n    disabled = 'disabled',\n    noData = 'No data',\n    toggle = 'Toggle',\n  } = labels || {};\n\n  return {\n    clear,\n    create,\n    disabled,\n    noData,\n    toggle,\n  };\n}\n\nexport function getOptionData(input: Option, key: 'label'): string;\nexport function getOptionData(input: Option, key: 'value'): string | number;\n\nexport function getOptionData(input: Option, key: OptionKeys): string | number {\n  const value = input[key];\n\n  if (!isString(value) && !isNumber(value)) {\n    return innerText(value);\n  }\n\n  return value;\n}\n\nexport function getPosition(props: ComponentProps, list: HTMLDivElement | null): Position {\n  const {\n    methods: { getDropdownRef, getStyles: getStylesMethod },\n    props: { menuPosition = defaultProps.menuPosition },\n  } = props;\n\n  const dropdown = getDropdownRef();\n  const { gap } = getStylesMethod();\n  const spacing = 16;\n\n  if (menuPosition !== 'auto' || !list || !dropdown) {\n    return menuPosition;\n  }\n\n  const { bottom } = dropdown.getBoundingClientRect();\n  const { height } = list.getBoundingClientRect();\n  const viewportHeight = isomorphicWindow().innerHeight;\n\n  const totalHeight = bottom + height + gap + spacing;\n\n  if (totalHeight > viewportHeight) {\n    return 'top';\n  }\n\n  return 'bottom';\n}\n\nexport function getStyles(styles?: Partial<Styles>): Styles {\n  const {\n    bgColor = '#fff',\n    borderColor = '#ccc',\n    borderRadius = '4px',\n    color = '#1E90FF',\n    disabledItemBgColor = '#f2f2f2',\n    disabledItemColor = '#999',\n    gap = 2,\n    hoverColor,\n    hoverOpacity = 0.2,\n    menuMaxHeight = 300,\n    minHeight = 36,\n    placeholderColor = '#999',\n    spacingX = 12,\n    spacingY = 8,\n    width = '100%',\n  } = styles || {};\n\n  return {\n    bgColor,\n    borderColor,\n    borderRadius: px(borderRadius),\n    color,\n    disabledItemBgColor,\n    disabledItemColor,\n    gap,\n    hoverColor: hoverColor || color,\n    hoverOpacity,\n    menuMaxHeight,\n    minHeight,\n    placeholderColor,\n    spacingX: px(spacingX),\n    spacingY: px(spacingY),\n    width: px(width),\n  };\n}\n\nexport function isomorphicWindow() {\n  if (typeof window === 'undefined') {\n    return {\n      innerHeight: 0,\n    };\n  }\n\n  return window;\n}\n\nexport function isNumber(input: any): input is number {\n  return typeof input === 'number';\n}\n\nexport function isString(input: any): input is string {\n  return typeof input === 'string';\n}\n\nexport function matchOptions(options: Option[], search: string | number, strict = true) {\n  return options.some(d => {\n    const label = strict\n      ? getOptionData(d, 'label') === search\n      : getOptionData(d, 'label').includes(String(search));\n    const value = strict\n      ? getOptionData(d, 'value') === search\n      : String(getOptionData(d, 'value')).includes(String(search));\n\n    return label || value;\n  });\n}\n\nexport function parseNumber(input: string | number) {\n  if (isString(input)) {\n    return parseInt(input, 10);\n  }\n\n  return input;\n}\n\nexport function px(input: string | number): string {\n  return isString(input) ? input : `${input}px`;\n}\n","import { MouseEvent } from 'react';\nimport styled from '@emotion/styled';\n\nimport { SLUG } from '~/config';\n\nimport { getTextColor } from '~/modules/colors';\nimport { getComponentMinHeight } from '~/modules/helpers';\n\nimport Times from '~/icons/Times';\nimport { ComponentProps, Styles } from '~/types';\n\nconst StyledClear = styled.div<Styles>`\n  align-items: center;\n  color: ${({ bgColor }) => getTextColor(bgColor)};\n  display: inline-flex;\n  justify-content: center;\n  min-height: ${({ minHeight }) => getComponentMinHeight(minHeight)};\n  width: 24px;\n\n  :focus {\n    outline: none;\n  }\n\n  :hover {\n    fill: ${({ hoverColor }) => hoverColor};\n  }\n`;\n\nexport default function Clear(props: ComponentProps) {\n  const {\n    methods: { clearAll, getLabels, getStyles },\n    props: { clearComponent },\n  } = props;\n  const { clear } = getLabels();\n\n  if (clearComponent) {\n    return clearComponent(props);\n  }\n\n  const handleClick = (event: MouseEvent<HTMLDivElement>) => {\n    event.stopPropagation();\n    clearAll();\n  };\n\n  return (\n    <StyledClear\n      aria-label={clear}\n      className={`${SLUG}-clear`}\n      data-component-name=\"DropdownClear\"\n      onClick={handleClick}\n      title={clear}\n      {...getStyles()}\n    >\n      <Times />\n    </StyledClear>\n  );\n}\n","import { px } from '~/modules/helpers';\n\nfunction Times({ size = 8 }: { size?: number }): JSX.Element {\n  return (\n    <svg\n      height={px(size)}\n      preserveAspectRatio=\"xMidYMid\"\n      version=\"1.1\"\n      viewBox=\"0 0 16 16\"\n      width={px(size)}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g>\n        <path\n          d=\"M0.313174194,0.313176288 C0.730750479,-0.104392096 1.40776019,-0.104392096 1.82533647,0.313176288 L7.99996524,6.48786773 L14.174701,0.313176288 C14.5922452,-0.104392096 15.2692976,-0.104392096 15.6868418,0.313176288 C16.1043861,0.730755364 16.1043861,1.4077696 15.6868418,1.82534867 L9.51210613,8.00001873 L15.6867349,14.1746887 C16.1042791,14.5922357 16.1042791,15.2692928 15.6867349,15.6868398 C15.2691907,16.1043867 14.5921382,16.1043867 14.174594,15.6868398 L7.99996524,9.51216972 L1.82538994,15.6868398 C1.40782434,16.1043867 0.730814635,16.1043867 0.313238349,15.6868398 C-0.104327243,15.2692928 -0.104327243,14.5922357 0.313238349,14.1746887 L6.48782435,8.00001873 L0.313174194,1.82534867 C-0.104391398,1.4077696 -0.104391398,0.730755364 0.313174194,0.313176288 Z\"\n          fill=\"currentColor\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nexport default Times;\n","import { MouseEvent } from 'react';\nimport styled from '@emotion/styled';\n\nimport { SLUG } from '~/config';\n\nimport { getTextColor } from '~/modules/colors';\nimport { getComponentMinHeight, getOptionData } from '~/modules/helpers';\n\nimport { ComponentProps, Styles } from '~/types';\n\nimport Input from './Input';\nimport Option from './Option';\n\nconst StyledContent = styled.div<Styles>`\n  display: flex;\n  flex: 1;\n  flex-wrap: wrap;\n  min-height: ${({ minHeight }) => getComponentMinHeight(minHeight)};\n  padding: 2px ${({ spacingX }) => spacingX};\n\n  > span + input {\n    margin-left: 6px;\n  }\n`;\n\nconst StyledSingleOption = styled.span<Styles>`\n  align-items: center;\n  align-self: stretch;\n  box-sizing: border-box;\n  color: ${({ bgColor }) => getTextColor(bgColor)};\n  display: inline-flex;\n  justify-content: center;\n`;\n\nexport default function Content(props: ComponentProps) {\n  const {\n    methods: { getStyles, setStatus },\n    props: { contentComponent, multi, onClickSelector, searchable },\n    state: { status, values },\n  } = props;\n\n  const handleClick = (event: MouseEvent<HTMLElement>) => {\n    setStatus('toggle', event);\n\n    if (onClickSelector) {\n      onClickSelector(status);\n    }\n  };\n\n  return (\n    <StyledContent\n      className={`${SLUG}-content ${multi ? `${SLUG}-type-multi` : `${SLUG}-type-single`}`}\n      onClick={handleClick}\n      {...getStyles()}\n    >\n      {contentComponent ? (\n        contentComponent(props)\n      ) : (\n        <>\n          {multi\n            ? values.map(item => (\n                <Option\n                  key={`${getOptionData(item, 'label')}${getOptionData(item, 'value')}`}\n                  item={item}\n                  {...props}\n                />\n              ))\n            : !!values.length && (\n                <StyledSingleOption data-component-name=\"DropdownSingleOption\" {...getStyles()}>\n                  {getOptionData(values[0], 'label')}\n                </StyledSingleOption>\n              )}\n          {(!values.length || searchable) && <Input {...props} />}\n        </>\n      )}\n    </StyledContent>\n  );\n}\n","import { FocusEvent, KeyboardEvent, useEffect, useRef } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { SLUG } from '~/config';\n\nimport { getTextColor } from '~/modules/colors';\nimport { matchOptions } from '~/modules/helpers';\nimport { usePrevious } from '~/modules/hooks';\n\nimport { ComponentProps, Styles } from '~/types';\n\nconst StyledInput = styled.input<Styles>(props => {\n  const { bgColor, placeholderColor, readOnly, size } = props;\n\n  return css`\n    background-color: transparent;\n    border: none;\n    color: ${getTextColor(bgColor)};\n    ${readOnly && 'cursor: pointer;'}\n    font-size: inherit;\n    line-height: inherit;\n    padding: 0;\n    width: ${`${size}ch`};\n\n    &:focus {\n      outline: none;\n    }\n\n    &::placeholder {\n      color: ${placeholderColor};\n    }\n  `;\n});\n\nfunction getPlaceholder({ props, state }: ComponentProps) {\n  const { placeholder, searchable, secondaryPlaceholder } = props;\n  const hasValues = state.values && state.values.length > 0;\n\n  if (hasValues && secondaryPlaceholder && searchable) {\n    return secondaryPlaceholder;\n  }\n\n  if (!hasValues) {\n    return placeholder;\n  } else if (!searchable) {\n    return '';\n  }\n\n  return '';\n}\n\nexport default function Input(props: ComponentProps) {\n  const {\n    methods: { createItem, getInputSize, getStyles, setSearch },\n    props: { autoFocus, create, disabled, inputComponent, options, searchable },\n    state: { cursor, search, status, values },\n  } = props;\n  const ref = useRef<HTMLInputElement>(null);\n  const previousStatus = usePrevious(status);\n\n  useEffect(() => {\n    if (previousStatus !== status && status && autoFocus) {\n      ref.current?.focus();\n    }\n\n    if (previousStatus !== status && !status) {\n      ref.current?.blur();\n    }\n  }, [autoFocus, status, previousStatus]);\n\n  const handleBlur = (event: FocusEvent<HTMLInputElement>) => {\n    event.stopPropagation();\n\n    if (!status) {\n      ref.current?.blur();\n\n      return;\n    }\n\n    ref.current?.focus();\n  };\n\n  const handleKeyDown = (event: KeyboardEvent) => {\n    if (\n      create &&\n      event.key === 'Enter' &&\n      !matchOptions([...values, ...options], search, false) &&\n      search &&\n      cursor === null\n    ) {\n      createItem(search);\n    }\n  };\n\n  if (inputComponent) {\n    return inputComponent({ ...props, inputRef: ref });\n  }\n\n  return (\n    <StyledInput\n      ref={ref}\n      className={`${SLUG}-input`}\n      data-component-name=\"DropdownInput\"\n      disabled={disabled}\n      onBlur={handleBlur}\n      onChange={setSearch}\n      onKeyDown={handleKeyDown}\n      placeholder={getPlaceholder(props)}\n      readOnly={!searchable}\n      size={getInputSize()}\n      tabIndex={-1}\n      value={search}\n      {...getStyles()}\n    />\n  );\n}\n","import { useEffect, useRef } from 'react';\n\nexport function usePrevious<T>(value: T): T {\n  const ref: any = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { defaultProps, SLUG } from '~/config';\n\nimport { getTextColor } from '~/modules/colors';\nimport { getOptionData, getStyles } from '~/modules/helpers';\n\nimport Times from '~/icons/Times';\nimport { Direction, OptionComponentProps, Styles } from '~/types';\n\nconst StyledOption = styled.span<Styles & { direction: Direction }>(props => {\n  const { color, direction } = props;\n\n  return css`\n    align-items: center;\n    background-color: ${color};\n    border-radius: 2px;\n    color: ${getTextColor(color)};\n    display: flex;\n    flex-direction: ${direction === 'rtl' ? 'row-reverse' : 'row'};\n    line-height: 1;\n    margin: 3px 6px 3px 0;\n    padding: 4px;\n\n    :hover,\n    :hover > span {\n      opacity: 0.9;\n    }\n  `;\n});\n\nconst RemoveButton = styled.button<Styles>`\n  align-items: center;\n  appearance: none;\n  background-color: transparent;\n  border: none;\n  color: ${({ color }) => getTextColor(color)};\n  cursor: pointer;\n  display: inline-flex;\n  height: 16px;\n  justify-content: center;\n  margin-left: 4px;\n  padding: 0;\n  width: 16px;\n`;\n\nexport default function Option(props: OptionComponentProps) {\n  const {\n    item,\n    methods: { removeItem },\n    props: {\n      closeOnSelect = defaultProps.closeOnSelect,\n      direction = defaultProps.direction,\n      optionComponent,\n      styles,\n    },\n  } = props;\n\n  if (optionComponent) {\n    return optionComponent(props);\n  }\n\n  return (\n    <StyledOption\n      className={`${SLUG}-option`}\n      data-component-name=\"DropdownOption\"\n      direction={direction}\n      role=\"listitem\"\n      {...getStyles(styles)}\n    >\n      <span className={`${SLUG}-option-label`}>{getOptionData(item, 'label')}</span>\n      <RemoveButton\n        className={`${SLUG}-option-remove`}\n        data-component-name=\"DropdownOptionRemove\"\n        onClick={event => removeItem(event, item, closeOnSelect)}\n        role=\"presentation\"\n        {...getStyles(styles)}\n      >\n        <Times />\n      </RemoveButton>\n    </StyledOption>\n  );\n}\n","import { MouseEvent } from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\n\nimport { SLUG } from '~/config';\n\nimport { getTextColor } from '~/modules/colors';\nimport { getComponentMinHeight } from '~/modules/helpers';\n\nimport Arrow from '~/icons/Arrow';\nimport { ComponentProps, Styles } from '~/types';\n\nconst StyledHandle = styled('div', {\n  shouldForwardProp: prop => isPropValid(prop) && prop !== 'rotate',\n})<Styles & { status: boolean }>`\n  align-self: stretch;\n  align-items: start;\n  color: ${({ bgColor }) => getTextColor(bgColor)};\n  cursor: pointer;\n  display: flex;\n\n  :hover {\n    path {\n      fill: ${({ hoverColor }) => hoverColor};\n    }\n  }\n\n  :focus {\n    outline: none;\n\n    path {\n      fill: ${({ hoverColor }) => hoverColor};\n    }\n  }\n\n  > div {\n    align-items: center;\n    display: inline-flex;\n    height: ${({ minHeight }) => getComponentMinHeight(minHeight)};\n    justify-content: center;\n    min-width: 30px;\n    transition: transform 0.2s ease-in-out;\n    transform: rotate(${({ status }) => (status ? 180 : 0)}deg);\n  }\n`;\n\nexport default function Handle(props: ComponentProps) {\n  const {\n    methods: { getDropdownRef, getLabels, getStyles, setStatus },\n    props: { handleComponent, onClickSelector },\n    state: { status },\n  } = props;\n  const { toggle } = getLabels();\n\n  const handleClick = (event: MouseEvent<HTMLDivElement>) => {\n    getDropdownRef()?.focus();\n    setStatus('toggle', event);\n\n    if (onClickSelector) {\n      onClickSelector(status);\n    }\n  };\n\n  return (\n    <StyledHandle\n      aria-label={toggle}\n      className={`${SLUG}-handle`}\n      data-component-name=\"DropdownHandle\"\n      onClick={handleClick}\n      status={status}\n      tabIndex={0}\n      title={toggle}\n      {...getStyles()}\n    >\n      <div>{handleComponent ? handleComponent(props) : <Arrow />}</div>\n    </StyledHandle>\n  );\n}\n","import { px } from '~/modules/helpers';\n\nexport default function Arrow({ size = 12 }: { size?: number }): JSX.Element {\n  return (\n    <svg\n      height={px(size)}\n      preserveAspectRatio=\"xMidYMid\"\n      version=\"1.1\"\n      viewBox=\"0 0 16 16\"\n      width={px(size)}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g transform=\"translate(0.0 3.5)\">\n        <path\n          d=\"M14.6367713,0 C14.7802691,0 14.9237668,0.0461538462 15.0672646,0.138461538 L15.8565022,0.969230769 C15.9521674,1.06153846 16,1.17692308 16,1.31538462 C16,1.45384615 15.9521674,1.56923077 15.8565022,1.66153846 L8.39461883,8.86153846 C8.29895366,8.95384615 8.1793722,9 8.03587444,9 C7.89237668,9 7.74887892,8.95384615 7.60538117,8.86153846 L0.143497758,1.66153846 C0.0478325859,1.56923077 0,1.45384615 0,1.31538462 C0,1.17692308 0.0478325859,1.06153846 0.143497758,0.969230769 L1.0044843,0.138461538 C1.10014948,0.0461538462 1.21973094,0 1.3632287,0 C1.50672646,0 1.62630792,0.0461538462 1.72197309,0.138461538 L8.03587444,6.23076923 L14.2780269,0.138461538 C14.3736921,0.0461538462 14.4932735,0 14.6367713,0 Z\"\n          fill=\"currentColor\"\n        />\n      </g>\n    </svg>\n  );\n}\n","import styled from '@emotion/styled';\n\nimport { SLUG } from '~/config';\n\nimport { getTextColor } from '~/modules/colors';\nimport { getComponentMinHeight } from '~/modules/helpers';\n\nimport Spinner from '~/icons/Spinner';\nimport { ComponentProps, Styles } from '~/types';\n\nconst StyledLoading = styled.div<Styles>`\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  align-items: center;\n  color: ${({ bgColor }) => getTextColor(bgColor)};\n  cursor: pointer;\n  display: inline-flex;\n  justify-content: center;\n  min-height: ${({ minHeight }) => getComponentMinHeight(minHeight)};\n  width: 24px;\n\n  path:nth-of-type(1) {\n    transform-origin: 50% 50%;\n    animation: spin 1s linear infinite;\n  }\n`;\n\nfunction Loading(props: ComponentProps) {\n  const {\n    methods: { getStyles },\n    props: { loaderComponent },\n  } = props;\n\n  if (loaderComponent) {\n    return loaderComponent(props);\n  }\n\n  return (\n    <StyledLoading className={`${SLUG}-loading`} {...getStyles()}>\n      <Spinner />\n    </StyledLoading>\n  );\n}\n\nexport default Loading;\n","import { px } from '~/modules/helpers';\n\nexport default function Spinner({ size = 12 }: { size?: number }): JSX.Element {\n  return (\n    <svg\n      height={px(size)}\n      preserveAspectRatio=\"xMidYMid\"\n      version=\"1.1\"\n      viewBox=\"0 0 16.0 16.0\"\n      width={px(size)}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g>\n        <path\n          d=\"M8,0 L8,2.4 C4.907208,2.4 2.4,4.907208 2.4,8 L0,8 C0,3.58172 3.58172,0 8,0 Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M8,0 C12.41824,0 16,3.58172 16,8 C16,12.41824 12.41824,16 8,16 C3.58172,16 0,12.41824 0,8 C0,3.58172 3.58172,0 8,0 Z M8,2.4 C4.907208,2.4 2.4,4.907208 2.4,8 C2.4,11.0928 4.907208,13.6 8,13.6 C11.0928,13.6 13.6,11.0928 13.6,8 C13.6,4.907208 11.0928,2.4 8,2.4 Z\"\n          fill=\"currentColor\"\n          fillOpacity=\"0.3\"\n        />\n      </g>\n    </svg>\n  );\n}\n","import { useEffect, useRef, useState } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { SLUG } from '~/config';\n\nimport { hexToRGBA } from '~/modules/colors';\nimport { getPosition, px } from '~/modules/helpers';\n\nimport { AnyObject, ComponentProps, Position, Styles } from '~/types';\n\nimport Create from './Create';\nimport MenuItem from './MenuItem';\nimport NoData from './NoData';\n\nconst StyledMenu = styled('div')<\n  Styles & {\n    dropdownBounds: DOMRect | AnyObject;\n    isVisible: boolean;\n    position: Position;\n  }\n>(props => {\n  const {\n    bgColor,\n    borderColor,\n    borderRadius,\n    dropdownBounds,\n    gap,\n    isVisible,\n    menuMaxHeight,\n    position,\n  } = props;\n  const borderWidth = 2;\n\n  return css`\n    background-color: ${bgColor};\n    border-radius: ${borderRadius};\n    border: 1px solid ${borderColor};\n    box-shadow: 0 0 10px 0 ${hexToRGBA('#000000', 0.2)};\n    display: flex;\n    flex-direction: column;\n    left: -1px;\n    max-height: ${px(menuMaxHeight)};\n    opacity: ${isVisible ? 1 : 0};\n    overflow: auto;\n    position: absolute;\n    width: ${dropdownBounds.width}px;\n    z-index: 9;\n    ${\n      position === 'top'\n        ? `bottom: ${dropdownBounds.height + borderWidth + gap}px`\n        : `top: ${dropdownBounds.height + borderWidth + gap}px`\n    };\n\n    :focus {\n      outline: none;\n    }\n  }\n  `;\n});\n\nfunction Menu(props: ComponentProps) {\n  const {\n    methods: { getStyles },\n    props: { menuComponent },\n    state: { dropdownBounds, searchResults },\n  } = props;\n  const listRef = useRef<HTMLDivElement>(null);\n  const [isVisible, setVisible] = useState(false);\n\n  useEffect(() => {\n    setVisible(true);\n  }, []);\n\n  const position = getPosition(props, listRef.current);\n\n  return (\n    <StyledMenu\n      ref={listRef}\n      className={`${SLUG}-menu ${SLUG}-menu-position-${position}`}\n      data-component-name=\"DropdownMenu\"\n      dropdownBounds={dropdownBounds}\n      isVisible={isVisible}\n      position={position}\n      role=\"list\"\n      tabIndex={-1}\n      {...getStyles()}\n    >\n      {menuComponent ? (\n        menuComponent(props)\n      ) : (\n        <>\n          <Create {...props} />\n          {searchResults.length ? (\n            searchResults.map((item, itemIndex) => (\n              <MenuItem key={item.value} item={item} itemIndex={itemIndex} {...props} />\n            ))\n          ) : (\n            <NoData {...props} />\n          )}\n        </>\n      )}\n    </StyledMenu>\n  );\n}\n\nexport default Menu;\n","import { MouseEvent } from 'react';\nimport styled from '@emotion/styled';\n\nimport { SLUG } from '~/config';\n\nimport { getTextColor, hexToRGBA } from '~/modules/colors';\nimport { matchOptions } from '~/modules/helpers';\n\nimport { ComponentProps, Styles } from '~/types';\n\nconst StyledCreate = styled.div<Styles>`\n  color: ${({ color }) => color};\n  padding: 5px 10px;\n\n  :hover,\n  :focus {\n    background-color: ${({ color }) => hexToRGBA(color, 0.1)};\n    outline: none;\n    cursor: pointer;\n  }\n\n  &.${SLUG}-create-active {\n    background-color: ${({ color }) => color};\n    color: ${({ color }) => getTextColor(color)};\n  }\n`;\n\nexport default function Create(props: ComponentProps): JSX.Element | null {\n  const {\n    methods: { createItem, getLabels, getStyles },\n    props: { create, options },\n    state: { cursor, search, values },\n  } = props;\n  const shouldRender = create && search && !matchOptions([...values, ...options], search, false);\n\n  const { create: createLabel } = getLabels();\n\n  const handleClick = (event: MouseEvent<HTMLDivElement>) => {\n    event.stopPropagation();\n    createItem(search);\n  };\n\n  if (!shouldRender) {\n    return null;\n  }\n\n  const classes = [`${SLUG}-create`];\n\n  if (cursor === 0) {\n    classes.push(`${SLUG}-create-active`);\n  }\n\n  return (\n    <StyledCreate\n      className={classes.join(' ')}\n      data-component-name=\"DropdownCreate\"\n      onClick={handleClick}\n      role=\"button\"\n      {...getStyles()}\n    >\n      {createLabel.replace('{search}', `\"${search}\"`)}\n    </StyledCreate>\n  );\n}\n","import { MouseEvent, useEffect, useRef } from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { SLUG } from '~/config';\n\nimport { getTextColor, hexToRGBA } from '~/modules/colors';\nimport { getOptionData } from '~/modules/helpers';\n\nimport { ItemComponentProps, Props, Styles } from '~/types';\n\nconst StyledMenuItem = styled.div<Styles & Required<Pick<Props, 'disabled'>>>(props => {\n  const {\n    bgColor,\n    color,\n    disabled,\n    disabledItemBgColor,\n    disabledItemColor,\n    hoverColor,\n    hoverOpacity,\n    spacingX,\n    spacingY,\n  } = props;\n\n  return css`\n    color: ${getTextColor(bgColor)};\n    cursor: pointer;\n    padding: ${spacingY} ${spacingX};\n\n    &.${SLUG}-item-active {\n      ${!disabled && `background-color: ${hexToRGBA(color, 0.2)};`}\n    }\n\n    + div {\n      border-top: 1px solid #fff;\n    }\n\n    :hover,\n    :focus {\n      background-color: ${hexToRGBA(hoverColor, hoverOpacity)};\n      outline: none;\n    }\n\n    &.${SLUG}-item-selected {\n      background-color: ${color};\n      color: ${getTextColor(color)};\n\n      &.${SLUG}-item-active {\n        background-color: ${hexToRGBA(color, 0.9)};\n      }\n    }\n\n    ${disabled &&\n    css`\n      background-color: ${disabledItemBgColor} !important;\n      color: ${disabledItemColor} !important;\n      cursor: not-allowed;\n\n      ins {\n        border-radius: 2px;\n        border: 1px solid ${disabledItemColor};\n        font-size: x-small;\n        padding: 0 3px;\n        text-decoration: none;\n        text-transform: uppercase;\n      }\n    `}\n  `;\n});\n\nexport default function MenuItem(props: ItemComponentProps) {\n  const {\n    item,\n    itemIndex,\n    methods: { addItem, getLabels, getStyles, isSelected, removeItem },\n    props: { keepSelectedInList, menuItemComponent },\n    state: { cursor },\n  } = props;\n  const ref = useRef<HTMLDivElement>(null);\n  const disabled = item.disabled || false;\n  const { disabled: disabledLabel } = getLabels();\n\n  useEffect(() => {\n    if (cursor === itemIndex) {\n      ref.current?.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });\n    }\n  }, [cursor, itemIndex]);\n\n  const handleClick = (event: MouseEvent<HTMLDivElement>) => {\n    event.stopPropagation();\n\n    if (disabled) {\n      return;\n    }\n\n    if (isSelected(item)) {\n      removeItem(null, item, false);\n    } else {\n      addItem(item);\n    }\n  };\n\n  if (menuItemComponent) {\n    return menuItemComponent(props);\n  }\n\n  if (!keepSelectedInList && isSelected(item)) {\n    return null;\n  }\n\n  const classes = [`${SLUG}-item`];\n\n  if (isSelected(item)) {\n    classes.push(`${SLUG}-item-selected`);\n  }\n\n  if (cursor === itemIndex) {\n    classes.push(`${SLUG}-item-active`);\n  }\n\n  if (disabled) {\n    classes.push(`${SLUG}-item-disabled`);\n  }\n\n  return (\n    <StyledMenuItem\n      key={`${getOptionData(item, 'value')}${getOptionData(item, 'label')}`}\n      ref={ref}\n      aria-disabled={disabled}\n      aria-label={getOptionData(item, 'label')}\n      aria-selected={isSelected(item)}\n      className={classes.join(' ')}\n      data-component-name=\"DropdownMenuItem\"\n      disabled={disabled}\n      onClick={handleClick}\n      role=\"option\"\n      tabIndex={-1}\n      {...getStyles()}\n      style={item.style}\n    >\n      {getOptionData(item, 'label')} {disabled && <ins>{disabledLabel}</ins>}\n    </StyledMenuItem>\n  );\n}\n","import styled from '@emotion/styled';\n\nimport { SLUG } from '~/config';\n\nimport { ComponentProps, Styles } from '~/types';\n\nconst StyledNoData = styled.div<Styles>`\n  color: ${({ color }) => color};\n  padding: 10px;\n  text-align: center;\n`;\n\nfunction NoData(props: ComponentProps) {\n  const {\n    methods: { getLabels, getStyles },\n    props: { noDataComponent },\n  } = props;\n  const { noData } = getLabels();\n\n  if (noDataComponent) {\n    return noDataComponent(props);\n  }\n\n  return (\n    <StyledNoData\n      className={`${SLUG}-no-data`}\n      data-component-name=\"DropdownNoData\"\n      {...getStyles()}\n    >\n      {noData}\n    </StyledNoData>\n  );\n}\n\nexport default NoData;\n","import styled from '@emotion/styled';\n\nimport { SLUG } from '~/config';\n\nimport { ComponentProps, Styles } from '~/types';\n\nconst StyledSeparator = styled.div<Styles>`\n  align-self: stretch;\n  background-color: ${({ borderColor }) => borderColor};\n  display: block;\n  width: 1px;\n`;\n\nexport default function Separator(props: ComponentProps) {\n  const {\n    methods: { getStyles },\n    props: { separatorComponent },\n  } = props;\n\n  if (separatorComponent) {\n    return separatorComponent(props);\n  }\n\n  return <StyledSeparator className={`${SLUG}-separator`} {...getStyles()} />;\n}\n"],"mappings":"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","names":["css","styled","isEqual","jsx","getLabels","getStyles","styled","useEffect","useRef","styled","jsx","styled","getStyles","useRef","useEffect","css","styled","jsx","styled","css","jsx","jsxs","styled","getStyles","isPropValid","styled","jsx","jsx","styled","isPropValid","getLabels","getStyles","styled","jsx","jsxs","jsx","styled","getStyles","useEffect","useRef","css","styled","styled","jsx","styled","getLabels","getStyles","useEffect","useRef","css","styled","jsx","jsxs","styled","css","getLabels","getStyles","useRef","useEffect","styled","jsx","styled","getLabels","getStyles","Fragment","jsx","jsxs","styled","css","getStyles","useRef","useEffect","styled","jsx","styled","getStyles","jsx","jsxs","styled","css","isEqual"]}